
.186

CODE  SEGMENT
      ASSUME CS:CODE,DS:CODE,ES:CODE,SS:CODE

      ORG 80H

CMDLN    DB   128 DUP(?)

      ORG 0100H

START:
	CLD
	MOV  AX,CS
	MOV  DS,AX
	MOV  ES,AX

	MOV   SI ,OFFSET  CMDLN
	MOV   DI ,OFFSET  FILE_NAME
	MOV   CL,BYTE PTR DS:[SI]
	INC   SI
	MOV   CH,0
GET_FILE_NAME_1:
	LODSB
	CMP   AL,' '
	JNE   GET_FILE_NAME_3
	LOOP  GET_FILE_NAME_1
GET_FILE_NAME_2:
	LODSB
GET_FILE_NAME_3:
	STOSB
	CMP   AL,' '
	JE    GET_FILE_NAME_4
	LOOP  GET_FILE_NAME_2
GET_FILE_NAME_4:
	MOV   AL,0
	STOSB

	MOV   BX,1000H
	MOV   AH,4AH
	INT   21H
	MOV   AH,48H
	MOV   BX,1000H
	INT   21H
	MOV   DSEG,AX

	MOV  READ_TRACK,0
;	MOV   AH,3CH
        MOV   AX,3D00H
	MOV   DX,OFFSET FILE_NAME
	MOV   CX,0
	INT   21H
	MOV   CS:HANDL,AX

	PUSH  DS
	PUSH  ES
	MOV   AX,CS:DSEG
	MOV   DS,AX
	MOV   ES,AX
RD_WR_LOOP:

	MOV   AH,3FH
	MOV   BX,CS:HANDL
	MOV   CX,2000H
	MOV   DX,0
	INT   21H

	MOV   AX,5590H
	MOV   BX,2000H
	MOV   CX,CS:READ_TRACK
	MOV   DH,CL
	SHR   CL,1
	AND   DH,1
	MOV   CH,3
	MOV   DL,1
	MOV   BP,0
	INT   1BH
	JNB   WR_FILE

	POP   ES
	POP   DS
	MOV   AH,9
	MOV   DX,OFFSET MES_READ_ERR
	INT   21H
	JMP   EXIT_LOOP

; 1SECTOR = 400H
; 8SECTOR = 2000H
WR_FILE:

;	MOV   AH,40H
;	MOV   BX,CS:HANDL
;	MOV   CX,2000H
;	MOV   DX,0
;	INT   21H

	INC   CS:READ_TRACK
	CMP   CS:READ_TRACK,153
	JBE   RD_WR_LOOP

	POP   ES
	POP   DS

EXIT_LOOP:
	MOV   AH,3EH
	MOV   BX,CS:HANDL
	INT   21H

	MOV   AH,49H
	MOV   ES,DSEG
	INT   21H
	MOV   AH,4CH
	INT   21H


READ_TRACK  DW  0
DSEG   DW   0
HANDL  DW  0

;                12345678.123
FILE_NAME   DB  'IMG.FDD     ',0

MES_READ_ERR  DB  'READ ERROR !',10,13,'$'


CODE    ENDS
        END    START


